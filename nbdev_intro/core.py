# AUTOGENERATED! DO NOT EDIT! File to edit: ../00_core.ipynb.

# %% auto 0
__all__ = ['say_hello', 'sieve_of_eratosthenes']

# %% ../00_core.ipynb 3
def say_hello(name):
    """
    Say hello to somebody
    
    Required argument:
    name: (str) name to say hello to
    """
    return f'Hello {name}!'

# %% ../00_core.ipynb 6
def sieve_of_eratosthenes(num):
    """
    Print all primes less than or equal to N using the Sieve of Eratosthenes. 
    
    Required argument: 
    num: (int) number, N
    """
    # boolean array
    prime = [True for i in range(num+1)]
    p = 2
    primes = []
    
    while (p * p <= num):
  
        # If prime[p] is not changed, then it is a prime
        if (prime[p] == True):
  
            # Updating all multiples of p
            for i in range(p * p, num+1, p):
                prime[i] = False
        p += 1
  
    # return all prime numbers
    for p in range(2, num+1):
        if prime[p]:
            primes.append(p)
    return primes
  
